#ifndef C_KEYWORDS_H
#define C_KEYWORDS_H

typedef enum {
        KW_ALIGNAS,
        KW_ALIGNOF,
        KW_AUTO,
        KW_BOOL,
        KW_BREAK,
        KW_CASE,
        KW_CHAR,
        KW_CONST,
        KW_CONTINUE,
        KW_DEFAULT,
        KW_DO,
        KW_DOUBLE,
        KW_ELSE,
        KW_ENUM,
        KW_EXTERN,
        KW_FALSE,
        KW_FLOAT,
        KW_FOR,
        KW_GOTO,
        KW_IF,
        KW_INLINE,
        KW_INT,
        KW_LONG,
        KW_REGISTER,
        KW_REMOVE_QUALS,
        KW_RESTRICT,
        KW_RETURN,
        KW_SHORT,
        KW_SIGNED,
        KW_SIZEOF,
        KW_STATIC,
        KW_STATIC_ASSERT,
        KW_STRUCT,
        KW_SWITCH,
        KW_THREAD_LOCAL,
        KW_TRUE,
        KW_TYPEDEF,
        KW_TYPEOF,
        KW_UNION,
        KW_UNSIGNED,
        KW_VOID,
        KW_VOLATILE,
        KW_WHILE,
        KW__ALIGNAS,
        KW__ALIGNOF,
        KW__ATOMIC,
        KW__BITINT,
        KW__BOOL,
        KW__COMPLEX,
        KW__DECIMAL128,
        KW__DECIMAL32,
        KW__DECIMAL64,
        KW__GENERIC,
        KW__IMAGINARY,
        KW__NORETURN,
        KW__STATIC_ASSERT,
        KW__THREAD_LOCAL
} KEYWORDS_T;

const char *KEYWORD_DICT[] = {
        [KW_ALIGNAS] = "alignas",
        [KW_ALIGNOF] = "alignof",
        [KW_AUTO] = "auto",
        [KW_BOOL] = "bool",
        [KW_BREAK] = "break",
        [KW_CASE] = "case",
        [KW_CHAR] = "char",
        [KW_CONST] = "const",
        [KW_CONTINUE] = "continue",
        [KW_DEFAULT] = "default",
        [KW_DO] = "do",
        [KW_DOUBLE] = "double",
        [KW_ELSE] = "else",
        [KW_ENUM] = "enum",
        [KW_EXTERN] = "extern",
        [KW_FALSE] = "false",
        [KW_FLOAT] = "float",
        [KW_FOR] = "for",
        [KW_GOTO] = "goto",
        [KW_IF] = "if",
        [KW_INLINE] = "inline",
        [KW_INT] = "int",
        [KW_LONG] = "long",
        [KW_REGISTER] = "register",
        [KW_REMOVE_QUALS] = "remove_quals",
        [KW_RESTRICT] = "restrict",
        [KW_RETURN] = "return",
        [KW_SHORT] = "short",
        [KW_SIGNED] = "signed",
        [KW_SIZEOF] = "sizeof",
        [KW_STATIC] = "static",
        [KW_STATIC_ASSERT] = "static_assert",
        [KW_STRUCT] = "struct",
        [KW_SWITCH] = "switch",
        [KW_THREAD_LOCAL] = "thread_local",
        [KW_TRUE] = "true",
        [KW_TYPEDEF] = "true",
        [KW_TYPEOF] = "typeof",
        [KW_UNION] = "union",
        [KW_UNSIGNED] = "unsigned",
        [KW_VOID] = "void",
        [KW_VOLATILE] = "volatile",
        [KW_WHILE] = "while",
        [KW__ALIGNAS] = "_Alignas",
        [KW__ALIGNOF] = "_Alignof",
        [KW__ATOMIC] = "_Atomic",
        [KW__BITINT] = "_BitInt",
        [KW__BOOL] = "_Bool",
        [KW__COMPLEX] = "_Complex",
        [KW__DECIMAL128] = "_Decimal128",
        [KW__DECIMAL32] = "_Decimal32",
        [KW__DECIMAL64] = "_Decimal64",
        [KW__GENERIC] = "_Generic",
        [KW__IMAGINARY] = "_Imaginary",
        [KW__NORETURN] = "_Noreturn",
        [KW__STATIC_ASSERT] = "_Static_assert",
        [KW__THREAD_LOCAL] = "_Thread_local"
};

#endif